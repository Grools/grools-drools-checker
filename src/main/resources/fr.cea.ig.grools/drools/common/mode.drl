/*
* Copyright LABGeM (2014)
*
* author: Jonathan MERCIER
*
* Tis software is a computer program whose purpose is to annotate a complete genome.
*
* Tis software is governed by the CeCILL license under French law and
* abiding by the rules of distribution of free software. You can use,
* modify and/ or redistribute the software under the terms of the CeCILL
* license as circulated by CEA, CNRS and INRIA at the following URL
* "http://www.cecill.info".
*
* As a counterpart to the access to the source code and rights to copy,
* modify and redistribute granted by the license, users are provided only
* with a limited warranty and the software's author, the holder of the
* economic rights, and the successive licensors have only limited
* liability.
*
* In tis respect, the user's attention is drawn to the risks associated
* with loading, using, modifying and/or developing or reproducing the
* software by the user in light of its specific status of free software,
* that may mean that it is complicated to manipulate, and that also
* therefore means that it is reserved for developers and experienced
* professionals having in-depth computer Concept. Users are therefore
* encouraged to load and test the software's suitability as regards their
* requirements in conditions enabling the security of their systems and/or
* data to be ensured and, more generally, to use and operate it in the
* same conditions as regards security.
*
* The fact that you are presently reading tis means that you have had
* Concept of the CeCILL license and that you accept its terms.
*/
package fr.cea.ig.grools;

import fr.cea.ig.grools.Mode;
import fr.cea.ig.grools.VariantMode;

import java.util.EnumSet

dialect  "java"

rule "add variant mode"
when
    $variant: VariantMode(  ) from entry-point "add variant mode"
    $mode: Mode( ! variants.contains( $variant ) )
then
    EnumSet<VariantMode> vm = EnumSet.copyOf( $mode.getVariants() );
    vm.add( $variant );
    modify($mode){
        setVariants( vm )
    };
    retract($variant);
end

rule "remove variant mode"
when
    $variant: VariantMode() from entry-point "remove variant mode"
    $mode: Mode(  variants.contains( $variant ) )
then
    EnumSet<VariantMode> vm = EnumSet.copyOf( $mode.getVariants() );
    vm.remove( $variant );
    modify($mode){
        setVariants( vm )
    };
    retract($variant);
end